export declare type $NamespaceFilterType = "enable" | "disable";
export declare type $NamespaceFilter = {
    type: $NamespaceFilterType;
    source: string;
    regexp: RegExp;
};
export declare type $LevelFilter = (level: $DebugLevel) => boolean;
export declare type $LogArgs = [string, ...unknown[]];
export declare type $DebugLevel = number;
export declare type $DebuggerConfig<ColorType> = {
    color: ColorType;
    enabled: boolean;
    useColors: boolean;
    enableTime: boolean;
    enableDuration: boolean;
    level: $DebugLevel;
};
export declare type $DebuggerOptions = {
    enableTime?: boolean;
    enableDuration?: boolean;
    level?: $DebugLevel;
};
export declare type $Scope<ColorType> = {
    color: ColorType;
    level: number;
    enabled: boolean;
};
export declare type $Pinter = {
    readonly enabled: boolean;
} & ((...args: unknown[]) => void);
export declare namespace $Browser {
    interface HtmlNamespace {
        buildHTML(style: string): void;
        toHTML(): string;
    }
    interface HtmlDuration {
        buildHTML(style: string): void;
        toHTML(): string;
    }
}
