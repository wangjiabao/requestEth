import { $EventOptions } from "../event-base/index.js";
import { QueneEventEmitter } from "../event-quene_emitter/index.js";
import { $EventInOutMap, $InnerAnyInOutHandler } from "../event-quene_emitter/$types.js";
import { $QueneEventEmitterPro } from "./$types.js";
/**一个极简的事件管理模块 */
export declare class QueneEventEmitterPro<EM extends $EventInOutMap> extends QueneEventEmitter<EM> implements $QueneEventEmitterPro<EM> {
    /**触发事件监听 */
    emit<K extends keyof EM>(eventname: K, data: EM[K]["in"]): EM[K]["out"] | Promise<EM[K]["out"]> | undefined;
    /**是否有过监听通用事件处理 */
    private _hasCommonEmitHandlerMap?;
    private get _commonEmitHandlerMap();
    /**
     * 监听所有事件
     * @param commonHanlder
     * @param taskname
     */
    onEmit(commonHanlder: $InnerAnyInOutHandler<EM>, opts?: $EventOptions): void;
    /**
     * 移除所有事件的监听
     * @param commonHanlder
     */
    offEmit(commonHanlder: $InnerAnyInOutHandler<EM>): boolean;
    /**
     * 移除所有的事件
     */
    clear(opts?: {
        ignoreCommonErrorHanlder?: boolean;
        ignoreCustomErrorHanlder?: boolean;
    }): void;
}
export declare function syncQueneEventEmitterPro<EM extends $EventInOutMap>(): $QueneEventEmitterPro<EM>;
