"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlatformHelper = void 0;
const tslib_1 = require("tslib");
const index_js_1 = require("../dep_inject/index.js");
const index_js_2 = require("../platform/index.js");
const index_js_3 = require("../decorator/index.js");
const performance_js_1 = tslib_1.__importDefault(require("./performance.js"));
let PlatformHelper = class PlatformHelper {
    constructor() {
        Object.defineProperty(this, "platformInfo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: index_js_2.platformInfo
        });
        Object.defineProperty(this, "performance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (0, performance_js_1.default)()
        });
    }
    get platformName() {
        return index_js_2.platformInfo.platformName();
    }
    get isNodejs() {
        return index_js_2.isNodejs;
    }
    get isWin32() {
        return index_js_2.isWin32;
    }
    get isCordova() {
        return index_js_2.isCordova;
    }
    get isWebView() {
        return index_js_2.isWebView;
    }
    get isWebMainThread() {
        return index_js_2.isWebMainThread;
    }
    get isWebWorker() {
        return index_js_2.isWebWorker;
    }
};
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "platformName", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isNodejs", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isWin32", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isCordova", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isWebView", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isWebMainThread", null);
tslib_1.__decorate([
    index_js_3.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PlatformHelper.prototype, "isWebWorker", null);
PlatformHelper = tslib_1.__decorate([
    (0, index_js_1.Injectable)()
], PlatformHelper);
exports.PlatformHelper = PlatformHelper;
