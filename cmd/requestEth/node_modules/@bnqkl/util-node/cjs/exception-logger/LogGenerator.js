"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.exceptionLoggerCreater = exports.LogGenerator = void 0;
const index_js_1 = require("../logger/index.js");
// const lc: any = {};
// const LOGGER_LEVEL: any = {};
const index_js_2 = require("../extends-object/index.js");
// const cacheObjectGetter: any = {};
const typeColor_node_js_1 = require("./typeColor@node.js");
function createPrinter(nsp, color, level) {
    const logger = index_js_1.loggerCreater.create(nsp);
    if (color === undefined) {
        logger.forceSetUseColors(false);
    }
    else {
        logger.forceSetUseColors(true);
    }
    return logger.createPrinter(color === "inherit" ? logger.color : color, level);
}
//#region 日志工具
function LogGenerator(nsp) {
    const loggerHashMap = {
        get log() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.log, index_js_1.LOGGER_LEVEL.log);
        },
        get info() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.info, index_js_1.LOGGER_LEVEL.info);
        },
        get warn() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.warn, index_js_1.LOGGER_LEVEL.warn);
        },
        get success() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.success, index_js_1.LOGGER_LEVEL.success);
        },
        get trace() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.trace, index_js_1.LOGGER_LEVEL.trace);
        },
        get error() {
            return createPrinter(nsp, typeColor_node_js_1.typeColorHashMap.error, index_js_1.LOGGER_LEVEL.error);
        },
    };
    return (0, index_js_2.cacheObjectGetter)(loggerHashMap);
}
exports.LogGenerator = LogGenerator;
exports.exceptionLoggerCreater = index_js_1.loggerCreater;
//#endregion
