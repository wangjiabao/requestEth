"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromisePro = void 0;
const tslib_1 = require("tslib");
const index_js_1 = require("../decorator/index.js");
const index_js_2 = require("../event/index.js");
const index_js_3 = require("../extends-promise-out/index.js");
const index_js_4 = require("../typings/index.js");
const DelayPromise_js_1 = require("./DelayPromise.js");
const PromiseAbortError_js_1 = require("./PromiseAbortError.js");
/**
 * PromiseOut的加强版
 * 提供了中断、跟随
 *
 */
class PromisePro extends index_js_3.PromiseOut {
    constructor() {
        super();
        Object.defineProperty(this, "abort_error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "_hasAbortEvent", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
    }
    get is_done() {
        return this.is_resolved || this.is_rejected;
    }
    abort(abort_message = "Abort") {
        if (this.is_done) {
            return;
        }
        this.reject((this.abort_error = new PromiseAbortError_js_1.PromiseAbortError(abort_message)));
        this._hasAbortEvent &&
            this._abortEvent.emit("abort", this.abort_error, this);
    }
    get _abortEvent() {
        this._hasAbortEvent = true;
        return new index_js_2.EventEmitter();
    }
    onAbort(cb) {
        this._abortEvent.on("abort", cb);
    }
    follow(from_promise) {
        from_promise.then(this.resolve).catch(this.reject);
        return this.promise;
    }
    static fromPromise(promise) {
        const res = new PromisePro();
        if (promise instanceof DelayPromise_js_1.DelayPromise) {
            (0, index_js_4.$ignoreAwait)(promise.delayThen(res.resolve, res.reject));
        }
        else {
            (0, index_js_4.$ignoreAwait)(promise.then(res.resolve, res.reject));
        }
        return res;
    }
    finally(cb) {
        return this.promise.finally(cb);
    }
}
tslib_1.__decorate([
    index_js_1.cacheGetter,
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [])
], PromisePro.prototype, "_abortEvent", null);
exports.PromisePro = PromisePro;
