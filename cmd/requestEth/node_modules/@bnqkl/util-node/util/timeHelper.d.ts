import { PlatformHelper } from "./platformHelper.js";
export declare const TIME_HELPER_ARGS: {
    TIME_SPEED: string;
};
/**区块链时间模块 */
export declare class TimeHelper {
    protected platformHelper: PlatformHelper;
    readonly TIME_SPEED: number;
    /**
     * @param platformHelper
     * @param TIME_SPEED 时间速度
     */
    constructor(platformHelper: PlatformHelper, TIME_SPEED?: number);
    /**定时器 */
    setTimeout(fun: Function, ms: number): number;
    setInterval(fun: Function, ms: number): number;
    clearTimeout: typeof clearTimeout;
    clearInterval: typeof clearInterval;
    sleep(ms: number, onresolve?: () => unknown): Promise<unknown>;
    /**系统启动时间 */
    readonly SYSTEM_START_TIME: number;
    /**时间偏移量，毫秒 */
    time_offset_ms: number;
    get BLOCKCHAIN_SYSTEM_START_TIME(): number;
    /**获取当前区块链时间
     * PS: performance.now()+timeOrigin不能用来替代Date.now()
     * 但是Date.now又有可能被操作系统影响
     * 至少我们不希望时间回退，这会带来很多问题，但是允许时间前进到未来
     * 所以这里基于二者，来将时间强行卡在未来
     * 可以通过修改time_offset_ms来进行调整
     */
    now(forceRounding?: boolean): number;
    static NOW_DIFF_SYMBOL: symbol;
    /**
     * 穿梭时间
     * @param diffMs 正数，往未来。负数，往过去
     */
    changeNowByDiff(diffMs: number): void;
    changeNowByTime(time: number): void;
    formatDate(date: Date, format?: string): string;
    formatDateTime(time?: number): string;
    formatYMDHMS(year: number, month: number, day: number, h: number, m: number, s: number): string;
}
