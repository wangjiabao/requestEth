import { PromiseOut } from "../extends-promise-out/index.js";
interface Sub {
    start: number;
    end: number;
    changed: boolean | PromiseOut<void>;
}
export declare class ReactiveArray<T> extends Array<T> {
    constructor();
    emitChanged(start: number, count?: number): void;
    private _subs?;
    _subscription(sub: Sub): AsyncGenerator<T[], void, unknown>;
    subscription(start?: number, end?: number, takeCurrent?: boolean): AsyncGenerator<T[], void, unknown>;
    push(...args: T[]): number;
    pop(): T | undefined;
    unshift(...args: T[]): number;
    shift(): T | undefined;
    splice(start?: number, deleteCount?: number, ...items: T[]): T[];
    sort(compareFn?: (a: T, b: T) => number): this;
}
export {};
