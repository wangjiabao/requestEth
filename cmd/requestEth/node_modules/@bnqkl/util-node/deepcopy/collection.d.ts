export declare const get: {
    <V = unknown>(collection: V[], key: number, type?: string): V;
    <V_1 = unknown>(collection: {
        [x: string]: V_1;
        [x: number]: V_1;
        [x: symbol]: V_1;
    }, key: any, type?: string): V_1;
    <V_2 = unknown>(collection: Map<any, V_2>, key: any, type?: string): V_2;
    <V_3 = unknown>(collection: Set<V_3>, key: V_3, type?: string): V_3;
    (collection: unknown, key: unknown, type?: string): void;
};
export declare const set: {
    <C extends V[], V = unknown>(collection: C, key: number, value: V, type?: string): C;
    <C_1 extends {
        [x: string]: V_1;
        [x: number]: V_1;
        [x: symbol]: V_1;
    }, V_1 = unknown>(collection: C_1, key: any, value: V_1, type?: string): C_1;
    <C_2 extends Map<any, V_2>, V_2 = unknown>(collection: C_2, key: any, value: V_2, type?: string): C_2;
    <C_3 extends Set<V_3>, V_3 = unknown>(collection: C_3, key: V_3, value: V_3, type?: string): C_3;
    <C_4>(collection: C_4, key: unknown, type?: string): C_4;
};
/**
 * check to type string is collection
 *
 * @param {string} type
 */
export declare function isCollection(type: string): boolean;
