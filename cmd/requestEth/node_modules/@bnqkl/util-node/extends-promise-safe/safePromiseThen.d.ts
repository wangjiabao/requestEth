import { $SafeThendCache } from "./$types.js";
/**
 * 不创建出一个新promise的then方法
 * 避免无止境的在一个不可能不resolve的的对象上持续地创建出新的promise导致内存问题
 * @param fromPromise
 * @param onfulfilled
 * @param onrejected
 */
export declare function safePromiseThen<T, TResult1 = T, TResult2 = never>(fromPromise: PromiseLike<T>, onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): {
    thened: $SafeThendCache<T>;
    toPromise: PromiseLike<unknown>;
};
export declare function safePromiseOffThen<T, TResult1 = T, TResult2 = never>(promise: PromiseLike<T>, onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | undefined | null): $SafeThendCache<T>;
