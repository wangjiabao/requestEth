import { $PromiseType } from "../typings/index.js";
/**
 * 纯函数版的 quene
 * @param sourceFun
 * @param opts
 */
export declare function FunctionQuener<ARGS extends unknown[] = any[], RES = any, PR extends $PromiseType<RES> = $PromiseType<RES>>(sourceFun: (...args: ARGS) => RES, opts?: {
    bounceTime?: number;
    argsMerger?: (newArgs: ARGS, oldArgs: ARGS) => ARGS;
}): (this: unknown, ...args: ARGS) => Promise<PR>;
declare type Parameters<T> = T extends (...args: infer P) => any ? P : any[];
/**
 * 用做修饰器版的 quene
 * @param opts
 */
export declare function quene<T extends {
    [key: string]: any;
} = any, P extends string = any, ARSG extends Parameters<T[P]> = Parameters<T[P]>>(opts?: {
    bounceTime?: number;
    argsMerger?: (newArgs: ARSG, oldArgs: ARSG) => ARSG;
}): (target: T, propertyKey: P, descriptor: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any> | void;
export {};
