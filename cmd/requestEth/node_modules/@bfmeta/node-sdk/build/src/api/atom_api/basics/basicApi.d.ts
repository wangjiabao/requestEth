export declare class BasicApi {
    private __networkHelper;
    private __BASIC_API_MAP;
    constructor(__networkHelper: BFMetaNodeSDK.NetworkHelper);
    private __init;
    private __getBasicApi;
    getBlock(argv: BFMetaNodeSDK.Basic.GetBlockParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetBlockResult>>;
    getLastBlock(): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetLastBlockResult>>;
    getTransactionType(argv: BFMetaNodeSDK.Basic.GetTransactionTypeParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetTransactionTypeResult>>;
    getTransactions(argv: BFMetaNodeSDK.Basic.GetTransactionsParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetTransactionsResult>>;
    getBfchainVersion(): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetBfchainVersionResult>>;
    getNodeVersion(): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetNodeVersionResult>>;
    getBlockChainStatus(): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetBlockChainStatusResult>>;
    generateSecret(argv: BFMetaNodeSDK.Basic.GenerateSecretParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GenerateSecretResult>>;
    createAccount(argv: BFMetaNodeSDK.Basic.CreateAccountParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.CreateAccountResult>>;
    getAccountPublicKey(argv: BFMetaNodeSDK.Basic.GetAccountPublicKeyParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetAccountPublicKeyResult>>;
    getAccountLastTransaction(argv: BFMetaNodeSDK.Basic.GetAccountLastTransactionParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetAccountLastTransactionResult>>;
    getAccountLastTypeTransaction(argv: BFMetaNodeSDK.Basic.GetAccountLastTypeTransactionParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetAccountLastTypeTransactionResult>>;
    setKVStorageTemp(argv: BFMetaNodeSDK.Basic.SetKVStorageTempParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.SetKVStorageTempResult>>;
    getKVStorage(argv: BFMetaNodeSDK.Basic.GetKVStorageParams): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetKVStorageResult>>;
    getTransactionMinFeePerByte(): Promise<BFMetaNodeSDK.Basic.BasicApiReturn<BFMetaNodeSDK.Basic.GetTransactionMinFeePerByteResult>>;
}
