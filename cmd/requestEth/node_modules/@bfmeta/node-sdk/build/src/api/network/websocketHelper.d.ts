/// <reference types="socket.io-client" />
import type { ApiConfigHelper } from "../../helpers";
import { REQUEST_PROTOCOL } from "../../constants";
export declare class WebsocketHelper {
    private __configHelper;
    private __config;
    readonly REQUEST_PROTOCOL = REQUEST_PROTOCOL.WEBSOCKET;
    readonly URL_PREFIX = "";
    readonly TRANSACTION_SERVER_URL_PREFIX: string;
    constructor(configHelper: ApiConfigHelper);
    private __getUrl;
    private __getWebsocketHost;
    private __socketMap;
    private __initPromise;
    private __init;
    private __connect;
    private __bindEvent;
    connect(url: string): Promise<void>;
    getSocket(): SocketIOClient.Socket | undefined;
    createTransaction<T>(url: string, argv: {
        [key: string]: any;
    }): Promise<T>;
    sendGetRequest<T>(url: string, argv?: {
        [key: string]: any;
    }): Promise<T>;
    sendPostRequest: <T>(url: string, argv: {
        [key: string]: any;
    }) => Promise<T>;
    getSocketByNode(node: BFMetaNodeSDK.NodeHost): SocketIOClient.Socket | undefined;
    private __upgradeSocket;
    get upgradeSocket(): SocketIOClient.Socket | undefined;
    sendUpgradeRequest<T>(url: string, argv: {
        [key: string]: any;
    }): Promise<T>;
    private __initUpgrade;
}
