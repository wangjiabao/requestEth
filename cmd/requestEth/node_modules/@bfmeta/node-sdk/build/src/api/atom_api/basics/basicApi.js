"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasicApi = void 0;
const apis_1 = require("./apis");
require("../../../constants");
class BasicApi {
    __networkHelper;
    __BASIC_API_MAP = new Map();
    constructor(__networkHelper) {
        this.__networkHelper = __networkHelper;
        this.__init();
    }
    __init() {
        const { __networkHelper: networkHelper, __BASIC_API_MAP: BASIC_API_MAP } = this;
        const getBlockApi = new apis_1.GetBlockApi(networkHelper);
        const getLastBlockApi = new apis_1.GetLastBlockApi(networkHelper);
        const getTransactionTypeApi = new apis_1.GetTransactionTypeApi(networkHelper);
        const getTransactionsApi = new apis_1.GetTransactionsApi(networkHelper);
        const getBfchainVersionApi = new apis_1.GetBfchainVersionApi(networkHelper);
        const getNodeVersionApi = new apis_1.GetNodeVersionApi(networkHelper);
        const getBlockChainStatusApi = new apis_1.GetBlockChainStatusApi(networkHelper);
        const generateSecretApi = new apis_1.GenerateSecretApi(networkHelper);
        const createAccountApi = new apis_1.CreateAccountApi(networkHelper);
        const getAccountPublicKeyApi = new apis_1.GetAccountPublicKeyApi(networkHelper);
        const getAccountLastTransactionApi = new apis_1.GetAccountLastTransactionApi(networkHelper);
        const getAccountLastTypeTransactionApi = new apis_1.GetAccountLastTypeTransactionApi(networkHelper);
        const setKVStorageTempApi = new apis_1.SetKVStorageTempApi(networkHelper);
        const getKVStorageApi = new apis_1.GetKVStorageApi(networkHelper);
        const getTransactionMinFeePerByteApi = new apis_1.GetTransactionMinFeePerByteApi(networkHelper);
        BASIC_API_MAP.set(getBlockApi.REQUEST_API_PATH, getBlockApi);
        BASIC_API_MAP.set(getLastBlockApi.REQUEST_API_PATH, getLastBlockApi);
        BASIC_API_MAP.set(getTransactionTypeApi.REQUEST_API_PATH, getTransactionTypeApi);
        BASIC_API_MAP.set(getTransactionsApi.REQUEST_API_PATH, getTransactionsApi);
        BASIC_API_MAP.set(getBfchainVersionApi.REQUEST_API_PATH, getBfchainVersionApi);
        BASIC_API_MAP.set(getNodeVersionApi.REQUEST_API_PATH, getNodeVersionApi);
        BASIC_API_MAP.set(getBlockChainStatusApi.REQUEST_API_PATH, getBlockChainStatusApi);
        BASIC_API_MAP.set(generateSecretApi.REQUEST_API_PATH, generateSecretApi);
        BASIC_API_MAP.set(createAccountApi.REQUEST_API_PATH, createAccountApi);
        BASIC_API_MAP.set(getAccountPublicKeyApi.REQUEST_API_PATH, getAccountPublicKeyApi);
        BASIC_API_MAP.set(getAccountLastTransactionApi.REQUEST_API_PATH, getAccountLastTransactionApi);
        BASIC_API_MAP.set(getAccountLastTypeTransactionApi.REQUEST_API_PATH, getAccountLastTypeTransactionApi);
        BASIC_API_MAP.set(setKVStorageTempApi.REQUEST_API_PATH, setKVStorageTempApi);
        BASIC_API_MAP.set(getKVStorageApi.REQUEST_API_PATH, getKVStorageApi);
        BASIC_API_MAP.set(getTransactionMinFeePerByteApi.REQUEST_API_PATH, getTransactionMinFeePerByteApi);
        Object.freeze(BASIC_API_MAP);
    }
    __getBasicApi(apiPath) {
        return this.__BASIC_API_MAP.get(apiPath);
    }
    async getBlock(argv) {
        const api = this.__getBasicApi("/getBlock");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getLastBlock() {
        const api = this.__getBasicApi("/getLastBlock");
        const result = await api.sendGetRequest();
        return result;
    }
    async getTransactionType(argv) {
        const api = this.__getBasicApi("/getTransactionType");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getTransactions(argv) {
        const api = this.__getBasicApi("/getTransactions");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getBfchainVersion() {
        const api = this.__getBasicApi("/getBfchainVersion");
        const result = await api.sendGetRequest();
        return result;
    }
    async getNodeVersion() {
        const api = this.__getBasicApi("/nodeVersion");
        const result = await api.sendGetRequest();
        return result;
    }
    async getBlockChainStatus() {
        const api = this.__getBasicApi("/getBlockChainStatus");
        const result = await api.sendGetRequest();
        return result;
    }
    async generateSecret(argv) {
        const api = this.__getBasicApi("/generateSecret");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createAccount(argv) {
        const api = this.__getBasicApi("/createAccount");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getAccountPublicKey(argv) {
        const api = this.__getBasicApi("/getAccountPublicKey");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getAccountLastTransaction(argv) {
        const api = this.__getBasicApi("/getAccountLastTransaction");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getAccountLastTypeTransaction(argv) {
        const api = this.__getBasicApi("/getAccountLastTypeTransaction");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async setKVStorageTemp(argv) {
        const api = this.__getBasicApi("/setKVStorageTemp");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getKVStorage(argv) {
        const api = this.__getBasicApi("/getKVStorage");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getTransactionMinFeePerByte() {
        const api = this.__getBasicApi("/getTransactionMinFeePerByte");
        const result = await api.sendGetRequest();
        return result;
    }
}
exports.BasicApi = BasicApi;
