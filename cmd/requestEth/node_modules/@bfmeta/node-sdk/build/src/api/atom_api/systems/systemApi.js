"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemApi = void 0;
const apis_1 = require("./apis");
require("../../../constants");
class SystemApi {
    __networkHelper;
    __SYSTEM_API_MAP = new Map();
    constructor(__networkHelper) {
        this.__networkHelper = __networkHelper;
        this.__init();
    }
    __init() {
        const { __networkHelper: networkHelper, __SYSTEM_API_MAP: SYSTEM_API_MAP } = this;
        const safetyCloseApi = new apis_1.SafetyCloseApi(networkHelper);
        const setSystemKeyApi = new apis_1.SetSystemKeyApi(networkHelper);
        const verifySystemKeyApi = new apis_1.VerifySystemKeyApi(networkHelper);
        const addSystemAdminApi = new apis_1.AddSystemAdminApi(networkHelper);
        const getSystemAdminApi = new apis_1.GetSystemAdminApi(networkHelper);
        const verifySystemAdminApi = new apis_1.VerifySystemAdminApi(networkHelper);
        const deleteSystemAdminApi = new apis_1.DeleteSystemAdminApi(networkHelper);
        const resetSystemAdminApi = new apis_1.ResetSystemAdminApi(networkHelper);
        const bindingAccountApi = new apis_1.BindingAccountApi(networkHelper);
        const getSystemDelegateApi = new apis_1.GetSystemDelegateApi(networkHelper);
        const setSystemConfigApi = new apis_1.SetSystemConfigApi(networkHelper);
        const getSystemConfigInfoDetailApi = new apis_1.GetSystemConfigInfoDetailApi(networkHelper);
        const getRuntimeStateApi = new apis_1.GetRuntimeStateApi(networkHelper);
        const miningMachineInfoApi = new apis_1.MiningMachineInfoApi(networkHelper);
        const getSystemMonitorApi = new apis_1.GetSystemMonitorApi(networkHelper);
        const getSystemLoggerTypeApi = new apis_1.GetSystemLoggerTypeApi(networkHelper);
        const getSystemLoggerListApi = new apis_1.GetSystemLoggerListApi(networkHelper);
        const getSystemLoggerDetailApi = new apis_1.GetSystemLoggerDetailApi(networkHelper);
        const deleteSystemLoggerApi = new apis_1.DeleteSystemLoggerApi(networkHelper);
        const getEmailAddressApi = new apis_1.GetEmailAddressApi(networkHelper);
        const setEmailAddressApi = new apis_1.SetEmailAddressApi(networkHelper);
        const verifySystemSecretApi = new apis_1.VerifySystemSecretApi(networkHelper);
        const setSystemWhiteListApi = new apis_1.SetSystemWhiteListApi(networkHelper);
        const getSystemWhiteListApi = new apis_1.GetSystemWhiteListApi(networkHelper);
        const deleteSystemWhiteListApi = new apis_1.DeleteSystemWhiteListApi(networkHelper);
        const getProcessCPUApi = new apis_1.GetProcessCPUApi(networkHelper);
        const getProcessMemoryApi = new apis_1.GetProcessMemoryApi(networkHelper);
        const getProcessNetworkApi = new apis_1.GetProcessNetworkApi(networkHelper);
        const systemStatusApi = new apis_1.SystemStatusApi(networkHelper);
        const systemProcessApi = new apis_1.SystemProcessApi(networkHelper);
        const getAllUntreatedTrsCountApi = new apis_1.GetAllUntreatedTrsCountApi(networkHelper);
        const clearAllUntreatedTrsApi = new apis_1.ClearAllUntreatedTrsApi(networkHelper);
        const restoreAllUntreatedTrsApi = new apis_1.RestoreAllUntreatedTrsApi(networkHelper);
        SYSTEM_API_MAP.set(safetyCloseApi.REQUEST_API_PATH, safetyCloseApi);
        SYSTEM_API_MAP.set(setSystemKeyApi.REQUEST_API_PATH, setSystemKeyApi);
        SYSTEM_API_MAP.set(verifySystemKeyApi.REQUEST_API_PATH, verifySystemKeyApi);
        SYSTEM_API_MAP.set(addSystemAdminApi.REQUEST_API_PATH, addSystemAdminApi);
        SYSTEM_API_MAP.set(getSystemAdminApi.REQUEST_API_PATH, getSystemAdminApi);
        SYSTEM_API_MAP.set(verifySystemAdminApi.REQUEST_API_PATH, verifySystemAdminApi);
        SYSTEM_API_MAP.set(deleteSystemAdminApi.REQUEST_API_PATH, deleteSystemAdminApi);
        SYSTEM_API_MAP.set(resetSystemAdminApi.REQUEST_API_PATH, resetSystemAdminApi);
        SYSTEM_API_MAP.set(bindingAccountApi.REQUEST_API_PATH, bindingAccountApi);
        SYSTEM_API_MAP.set(getSystemDelegateApi.REQUEST_API_PATH, getSystemDelegateApi);
        SYSTEM_API_MAP.set(setSystemConfigApi.REQUEST_API_PATH, setSystemConfigApi);
        SYSTEM_API_MAP.set(getSystemConfigInfoDetailApi.REQUEST_API_PATH, getSystemConfigInfoDetailApi);
        SYSTEM_API_MAP.set(getRuntimeStateApi.REQUEST_API_PATH, getRuntimeStateApi);
        SYSTEM_API_MAP.set(miningMachineInfoApi.REQUEST_API_PATH, miningMachineInfoApi);
        SYSTEM_API_MAP.set(getSystemMonitorApi.REQUEST_API_PATH, getSystemMonitorApi);
        SYSTEM_API_MAP.set(getSystemLoggerTypeApi.REQUEST_API_PATH, getSystemLoggerTypeApi);
        SYSTEM_API_MAP.set(getSystemLoggerListApi.REQUEST_API_PATH, getSystemLoggerListApi);
        SYSTEM_API_MAP.set(getSystemLoggerDetailApi.REQUEST_API_PATH, getSystemLoggerDetailApi);
        SYSTEM_API_MAP.set(deleteSystemLoggerApi.REQUEST_API_PATH, deleteSystemLoggerApi);
        SYSTEM_API_MAP.set(getEmailAddressApi.REQUEST_API_PATH, getEmailAddressApi);
        SYSTEM_API_MAP.set(setEmailAddressApi.REQUEST_API_PATH, setEmailAddressApi);
        SYSTEM_API_MAP.set(verifySystemSecretApi.REQUEST_API_PATH, verifySystemSecretApi);
        SYSTEM_API_MAP.set(setSystemWhiteListApi.REQUEST_API_PATH, setSystemWhiteListApi);
        SYSTEM_API_MAP.set(getSystemWhiteListApi.REQUEST_API_PATH, getSystemWhiteListApi);
        SYSTEM_API_MAP.set(deleteSystemWhiteListApi.REQUEST_API_PATH, deleteSystemWhiteListApi);
        SYSTEM_API_MAP.set(getProcessCPUApi.REQUEST_API_PATH, getProcessCPUApi);
        SYSTEM_API_MAP.set(getProcessMemoryApi.REQUEST_API_PATH, getProcessMemoryApi);
        SYSTEM_API_MAP.set(getProcessNetworkApi.REQUEST_API_PATH, getProcessNetworkApi);
        SYSTEM_API_MAP.set(systemStatusApi.REQUEST_API_PATH, systemStatusApi);
        SYSTEM_API_MAP.set(systemProcessApi.REQUEST_API_PATH, systemProcessApi);
        SYSTEM_API_MAP.set(getAllUntreatedTrsCountApi.REQUEST_API_PATH, getAllUntreatedTrsCountApi);
        SYSTEM_API_MAP.set(clearAllUntreatedTrsApi.REQUEST_API_PATH, clearAllUntreatedTrsApi);
        SYSTEM_API_MAP.set(restoreAllUntreatedTrsApi.REQUEST_API_PATH, restoreAllUntreatedTrsApi);
        Object.freeze(SYSTEM_API_MAP);
    }
    __getSystemApi(apiPath) {
        return this.__SYSTEM_API_MAP.get(apiPath);
    }
    async safetyClose(argv) {
        const api = this.__getSystemApi("/safetyClose");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async setSystemKey(argv) {
        const api = this.__getSystemApi("/setSystemKey");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async verifySystemKey(argv) {
        const api = this.__getSystemApi("/verifySystemKey");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async addSystemAdmin(argv) {
        const api = this.__getSystemApi("/addSystemAdmin");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemAdmin(argv) {
        const api = this.__getSystemApi("/getSystemAdmin");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async verifySystemAdmin(argv) {
        const api = this.__getSystemApi("/verifySystemAdmin");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async deleteSystemAdmin(argv) {
        const api = this.__getSystemApi("/deleteSystemAdmin");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async resetSystemAdmin(argv) {
        const api = this.__getSystemApi("/resetSystemAdmin");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async bindingAccount(argv) {
        const api = this.__getSystemApi("/bindingAccount");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemDelegate(argv) {
        const api = this.__getSystemApi("/getSystemDelegate");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async setSystemConfig(argv) {
        const api = this.__getSystemApi("/setSystemConfig");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemConfigInfoDetail(argv) {
        const api = this.__getSystemApi("/getSystemConfigInfoDetail");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getRuntimeState(argv) {
        const api = this.__getSystemApi("/getRuntimeState");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async miningMachineInfo(argv) {
        const api = this.__getSystemApi("/miningMachineInfo");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemMonitor(argv) {
        const api = this.__getSystemApi("/getSystemMonitor");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemLoggerType(argv) {
        const api = this.__getSystemApi("/getSystemLoggerType");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemLoggerList(argv) {
        const api = this.__getSystemApi("/getSystemLoggerList");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemLoggerDetail(argv) {
        const api = this.__getSystemApi("/getSystemLoggerDetail");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async deleteSystemLogger(argv) {
        const api = this.__getSystemApi("/delSystemLogger");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getEmailAddress(argv) {
        const api = this.__getSystemApi("/getEmailAddress");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async setEmailAddress(argv) {
        const api = this.__getSystemApi("/setEmailAddress");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async verifySystemSecret(argv) {
        const api = this.__getSystemApi("/verifySystemSecret");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async setSystemWhiteList(argv) {
        const api = this.__getSystemApi("/setSystemWhitelist");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getSystemWhiteList(argv) {
        const api = this.__getSystemApi("/getSystemWhitelist");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async deleteSystemWhiteList(argv) {
        const api = this.__getSystemApi("/delSystemWhitelist");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getProcessCPU(argv) {
        const api = this.__getSystemApi("/getProcessCpu");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getProcessMemory(argv) {
        const api = this.__getSystemApi("/getProcessMemory");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getProcessNetwork(argv) {
        const api = this.__getSystemApi("/getProcessNetwork");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async systemStatus(argv) {
        const api = this.__getSystemApi("/systemStatus");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async systemProcess(argv) {
        const api = this.__getSystemApi("/systemProcess");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async getAllUntreatedTrsCount(argv) {
        const api = this.__getSystemApi("/getAllUntreatedTrsCount");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async clearAllUntreatedTrs(argv) {
        const api = this.__getSystemApi("/clearAllUntreatedTrs");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async restoreAllUntreatedTrs(argv) {
        const api = this.__getSystemApi("/restoreAllUntreatedTrs");
        const result = await api.sendPostRequest(argv);
        return result;
    }
}
exports.SystemApi = SystemApi;
