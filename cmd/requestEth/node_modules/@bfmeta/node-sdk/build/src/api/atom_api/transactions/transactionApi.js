"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionApi = void 0;
const atom_transaction_1 = require("./atom_transaction");
const migrate_certificate_1 = require("./migrate_certificate");
const atom_common_1 = require("./atom_common");
require("../../../constants");
class TransactionApi {
    __networkHelper;
    __TRANSACTION_API_MAP = new Map();
    __MIGRATE_CERTIFICATE_API_MAP = new Map();
    __COMMON_API_MAP = new Map();
    constructor(__networkHelper) {
        this.__networkHelper = __networkHelper;
        this.__init();
    }
    __init() {
        const { __networkHelper: networkHelper, __TRANSACTION_API_MAP: TRANSACTION_API_MAP, __MIGRATE_CERTIFICATE_API_MAP: MIGRATE_CERTIFICATE_API_MAP, __COMMON_API_MAP: COMMON_API_MAP, } = this;
        const commonTransactionApi = new atom_transaction_1.CommonTransactionApi(networkHelper);
        const usernameApi = new atom_transaction_1.UsernameApi(networkHelper);
        const signatureApi = new atom_transaction_1.SignatureApi(networkHelper);
        const delegateApi = new atom_transaction_1.DelegateApi(networkHelper);
        const acceptVoteApi = new atom_transaction_1.AcceptVoteApi(networkHelper);
        const rejectVoteApi = new atom_transaction_1.RejectVoteApi(networkHelper);
        const voteApi = new atom_transaction_1.VoteApi(networkHelper);
        const issueAssetApi = new atom_transaction_1.IssueAssetApi(networkHelper);
        const transferAssetApi = new atom_transaction_1.TransferAssetApi(networkHelper);
        const destroyAssetApi = new atom_transaction_1.DestroyAssetApi(networkHelper);
        const giftAssetApi = new atom_transaction_1.GiftAssetApi(networkHelper);
        const grabAssetApi = new atom_transaction_1.GrabAssetApi(networkHelper);
        const trustAssetApi = new atom_transaction_1.TrustAssetApi(networkHelper);
        const signForAssetApi = new atom_transaction_1.SignForAssetApi(networkHelper);
        const toExchangeAssetApi = new atom_transaction_1.ToExchangeAssetApi(networkHelper);
        const beExchangeAssetApi = new atom_transaction_1.BeExchangeAssetApi(networkHelper);
        const dAppApi = new atom_transaction_1.DAppApi(networkHelper);
        const dAppPurchasingApi = new atom_transaction_1.DAppPurchasingApi(networkHelper);
        const markApi = new atom_transaction_1.MarkApi(networkHelper);
        const locationNameApi = new atom_transaction_1.LocationNameApi(networkHelper);
        const setLnsManagerApi = new atom_transaction_1.SetLnsManagerApi(networkHelper);
        const setLnsRecordValueApi = new atom_transaction_1.SetLnsRecordValueApi(networkHelper);
        const toExchangeSpecialAssetApi = new atom_transaction_1.ToExchangeSpecialAssetApi(networkHelper);
        const beExchangeSpecialAssetApi = new atom_transaction_1.BeExchangeSpecialAssetApi(networkHelper);
        const issueEntityFactoryApi = new atom_transaction_1.IssueEntityFactoryApi(networkHelper);
        const issueEntityFactoryV1Api = new atom_transaction_1.IssueEntityFactoryV1Api(networkHelper);
        const issueEntityApi = new atom_transaction_1.IssueEntityApi(networkHelper);
        const destroyEntityApi = new atom_transaction_1.DestroyEntityApi(networkHelper);
        const transferAnyApi = new atom_transaction_1.TransferAnyApi(networkHelper);
        const giftAnyApi = new atom_transaction_1.GiftAnyApi(networkHelper);
        const grabAnyApi = new atom_transaction_1.GrabAnyApi(networkHelper);
        const toExchangeAnyApi = new atom_transaction_1.ToExchangeAnyApi(networkHelper);
        const beExchangeAnyApi = new atom_transaction_1.BeExchangeAnyApi(networkHelper);
        const issueEntityMultiApi = new atom_transaction_1.IssueEntityMultiApi(networkHelper);
        const toExchangeAnyMultiApi = new atom_transaction_1.ToExchangeAnyMultiApi(networkHelper);
        const beExchangeAnyMultiApi = new atom_transaction_1.BeExchangeAnyMultiApi(networkHelper);
        const toExchangeAnyMultiAllApi = new atom_transaction_1.ToExchangeAnyMultiAllApi(networkHelper);
        const beExchangeAnyMultiAllApi = new atom_transaction_1.BeExchangeAnyMultiAllApi(networkHelper);
        const registerChainApi = new atom_transaction_1.RegisterChainApi(networkHelper);
        const emigrateAssetApi = new atom_transaction_1.EmigrateAssetApi(networkHelper);
        const immigrateAssetApi = new atom_transaction_1.ImmigrateAssetApi(networkHelper);
        const issueCertificateApi = new atom_transaction_1.IssueCertificateApi(networkHelper);
        const destroyCertificateApi = new atom_transaction_1.DestroyCertificateApi(networkHelper);
        const macroApi = new atom_transaction_1.MacroApi(networkHelper);
        const macroCallApi = new atom_transaction_1.MacroCallApi(networkHelper);
        const promiseApi = new atom_transaction_1.PromiseApi(networkHelper);
        const promiseResolveApi = new atom_transaction_1.PromiseResolveApi(networkHelper);
        const multipleApi = new atom_transaction_1.MultipleApi(networkHelper);
        const increaseAssetApi = new atom_transaction_1.IncreaseAssetApi(networkHelper);
        const stakeAssetApi = new atom_transaction_1.StakeAssetApi(networkHelper);
        const unstakeAssetApi = new atom_transaction_1.UnstakeAssetApi(networkHelper);
        TRANSACTION_API_MAP.set(commonTransactionApi.GENERATE_API_PATH, commonTransactionApi);
        TRANSACTION_API_MAP.set(usernameApi.GENERATE_API_PATH, usernameApi);
        TRANSACTION_API_MAP.set(signatureApi.GENERATE_API_PATH, signatureApi);
        TRANSACTION_API_MAP.set(delegateApi.GENERATE_API_PATH, delegateApi);
        TRANSACTION_API_MAP.set(acceptVoteApi.GENERATE_API_PATH, acceptVoteApi);
        TRANSACTION_API_MAP.set(rejectVoteApi.GENERATE_API_PATH, rejectVoteApi);
        TRANSACTION_API_MAP.set(voteApi.GENERATE_API_PATH, voteApi);
        TRANSACTION_API_MAP.set(issueAssetApi.GENERATE_API_PATH, issueAssetApi);
        TRANSACTION_API_MAP.set(transferAssetApi.GENERATE_API_PATH, transferAssetApi);
        TRANSACTION_API_MAP.set(destroyAssetApi.GENERATE_API_PATH, destroyAssetApi);
        TRANSACTION_API_MAP.set(giftAssetApi.GENERATE_API_PATH, giftAssetApi);
        TRANSACTION_API_MAP.set(grabAssetApi.GENERATE_API_PATH, grabAssetApi);
        TRANSACTION_API_MAP.set(trustAssetApi.GENERATE_API_PATH, trustAssetApi);
        TRANSACTION_API_MAP.set(signForAssetApi.GENERATE_API_PATH, signForAssetApi);
        TRANSACTION_API_MAP.set(toExchangeAssetApi.GENERATE_API_PATH, toExchangeAssetApi);
        TRANSACTION_API_MAP.set(beExchangeAssetApi.GENERATE_API_PATH, beExchangeAssetApi);
        TRANSACTION_API_MAP.set(dAppApi.GENERATE_API_PATH, dAppApi);
        TRANSACTION_API_MAP.set(dAppPurchasingApi.GENERATE_API_PATH, dAppPurchasingApi);
        TRANSACTION_API_MAP.set(markApi.GENERATE_API_PATH, markApi);
        TRANSACTION_API_MAP.set(locationNameApi.GENERATE_API_PATH, locationNameApi);
        TRANSACTION_API_MAP.set(setLnsManagerApi.GENERATE_API_PATH, setLnsManagerApi);
        TRANSACTION_API_MAP.set(setLnsRecordValueApi.GENERATE_API_PATH, setLnsRecordValueApi);
        TRANSACTION_API_MAP.set(toExchangeSpecialAssetApi.GENERATE_API_PATH, toExchangeSpecialAssetApi);
        TRANSACTION_API_MAP.set(beExchangeSpecialAssetApi.GENERATE_API_PATH, beExchangeSpecialAssetApi);
        TRANSACTION_API_MAP.set(issueEntityFactoryApi.GENERATE_API_PATH, issueEntityFactoryApi);
        TRANSACTION_API_MAP.set(issueEntityFactoryV1Api.GENERATE_API_PATH, issueEntityFactoryV1Api);
        TRANSACTION_API_MAP.set(issueEntityApi.GENERATE_API_PATH, issueEntityApi);
        TRANSACTION_API_MAP.set(destroyEntityApi.GENERATE_API_PATH, destroyEntityApi);
        TRANSACTION_API_MAP.set(toExchangeAnyApi.GENERATE_API_PATH, toExchangeAnyApi);
        TRANSACTION_API_MAP.set(beExchangeAnyApi.GENERATE_API_PATH, beExchangeAnyApi);
        TRANSACTION_API_MAP.set(transferAnyApi.GENERATE_API_PATH, transferAnyApi);
        TRANSACTION_API_MAP.set(giftAnyApi.GENERATE_API_PATH, giftAnyApi);
        TRANSACTION_API_MAP.set(grabAnyApi.GENERATE_API_PATH, grabAnyApi);
        TRANSACTION_API_MAP.set(issueEntityMultiApi.GENERATE_API_PATH, issueEntityMultiApi);
        TRANSACTION_API_MAP.set(toExchangeAnyMultiApi.GENERATE_API_PATH, toExchangeAnyMultiApi);
        TRANSACTION_API_MAP.set(beExchangeAnyMultiApi.GENERATE_API_PATH, beExchangeAnyMultiApi);
        TRANSACTION_API_MAP.set(toExchangeAnyMultiAllApi.GENERATE_API_PATH, toExchangeAnyMultiAllApi);
        TRANSACTION_API_MAP.set(beExchangeAnyMultiAllApi.GENERATE_API_PATH, beExchangeAnyMultiAllApi);
        TRANSACTION_API_MAP.set(registerChainApi.GENERATE_API_PATH, registerChainApi);
        TRANSACTION_API_MAP.set(emigrateAssetApi.GENERATE_API_PATH, emigrateAssetApi);
        TRANSACTION_API_MAP.set(immigrateAssetApi.GENERATE_API_PATH, immigrateAssetApi);
        TRANSACTION_API_MAP.set(issueCertificateApi.GENERATE_API_PATH, issueCertificateApi);
        TRANSACTION_API_MAP.set(destroyCertificateApi.GENERATE_API_PATH, destroyCertificateApi);
        TRANSACTION_API_MAP.set(promiseApi.GENERATE_API_PATH, promiseApi);
        TRANSACTION_API_MAP.set(promiseResolveApi.GENERATE_API_PATH, promiseResolveApi);
        TRANSACTION_API_MAP.set(macroApi.GENERATE_API_PATH, macroApi);
        TRANSACTION_API_MAP.set(macroCallApi.GENERATE_API_PATH, macroCallApi);
        TRANSACTION_API_MAP.set(multipleApi.GENERATE_API_PATH, multipleApi);
        TRANSACTION_API_MAP.set(increaseAssetApi.GENERATE_API_PATH, increaseAssetApi);
        TRANSACTION_API_MAP.set(stakeAssetApi.GENERATE_API_PATH, stakeAssetApi);
        TRANSACTION_API_MAP.set(unstakeAssetApi.GENERATE_API_PATH, unstakeAssetApi);
        Object.freeze(TRANSACTION_API_MAP);
        const createMigrateCertificateApi = new migrate_certificate_1.GenerateMigrateCertificateApi(networkHelper);
        const fromAuthSignatureMigrateCertificateApi = new migrate_certificate_1.FromAuthSignatureMigrateCertificateApi(networkHelper);
        const toAuthSignatureMigrateCertificateApi = new migrate_certificate_1.ToAuthSignatureMigrateCertificateApi(networkHelper);
        MIGRATE_CERTIFICATE_API_MAP.set(createMigrateCertificateApi.GENERATE_API_PATH, createMigrateCertificateApi);
        MIGRATE_CERTIFICATE_API_MAP.set(fromAuthSignatureMigrateCertificateApi.GENERATE_API_PATH, fromAuthSignatureMigrateCertificateApi);
        MIGRATE_CERTIFICATE_API_MAP.set(toAuthSignatureMigrateCertificateApi.GENERATE_API_PATH, toAuthSignatureMigrateCertificateApi);
        Object.freeze(MIGRATE_CERTIFICATE_API_MAP);
        const verifyAddressApi = new atom_common_1.VerifyAddressApi(networkHelper);
        const verifyPublicKeyApi = new atom_common_1.VerifyPublicKeyApi(networkHelper);
        const createKeypairApi = new atom_common_1.GenerateKeypairApi(networkHelper);
        const createAccountApi = new atom_common_1.GenerateAccountApi(networkHelper);
        const createAddressBySecretApi = new atom_common_1.GenerateAddressBySecretApi(networkHelper);
        const createAddressByPublicKeyApi = new atom_common_1.GenerateAddressByPublicKeyApi(networkHelper);
        const asymmetricEncryptApi = new atom_common_1.AsymmetricEncryptApi(networkHelper);
        const asymmetricDecryptApi = new atom_common_1.AsymmetricDecryptApi(networkHelper);
        const calcTransactionMinFeeApi = new atom_common_1.CalcTransactionMinFeeApi(networkHelper);
        const createCiphertextSignatureApi = new atom_common_1.GenerateCiphertextSignatureApi(networkHelper);
        COMMON_API_MAP.set(verifyAddressApi.EXEC_API_PATH, verifyAddressApi);
        COMMON_API_MAP.set(verifyPublicKeyApi.EXEC_API_PATH, verifyPublicKeyApi);
        COMMON_API_MAP.set(createKeypairApi.EXEC_API_PATH, createKeypairApi);
        COMMON_API_MAP.set(createAccountApi.EXEC_API_PATH, createAccountApi);
        COMMON_API_MAP.set(createAddressBySecretApi.EXEC_API_PATH, createAddressBySecretApi);
        COMMON_API_MAP.set(createAddressByPublicKeyApi.EXEC_API_PATH, createAddressByPublicKeyApi);
        COMMON_API_MAP.set(asymmetricEncryptApi.EXEC_API_PATH, asymmetricEncryptApi);
        COMMON_API_MAP.set(asymmetricDecryptApi.EXEC_API_PATH, asymmetricDecryptApi);
        COMMON_API_MAP.set(calcTransactionMinFeeApi.EXEC_API_PATH, calcTransactionMinFeeApi);
        COMMON_API_MAP.set(createCiphertextSignatureApi.EXEC_API_PATH, createCiphertextSignatureApi);
        Object.freeze(COMMON_API_MAP);
    }
    __getTransactionApi(apiPath) {
        return this.__TRANSACTION_API_MAP.get(apiPath);
    }
    async broadcastCompleteTransaction(argv) {
        const api = this.__getTransactionApi("/generate");
        const result = await api.broadcastCompleteTransaction(argv);
        return result;
    }
    async createUsername(argv) {
        const api = this.__getTransactionApi("/generate/username");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageUsername(argv) {
        const api = this.__getTransactionApi("/generate/username");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastUsername(argv) {
        const api = this.__getTransactionApi("/generate/username");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createSignature(argv) {
        const api = this.__getTransactionApi("/generate/signature");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageSignature(argv) {
        const api = this.__getTransactionApi("/generate/signature");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastSignature(argv) {
        const api = this.__getTransactionApi("/generate/signature");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDelegate(argv) {
        const api = this.__getTransactionApi("/generate/delegate");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDelegate(argv) {
        const api = this.__getTransactionApi("/generate/delegate");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDelegate(argv) {
        const api = this.__getTransactionApi("/generate/delegate");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createAcceptVote(argv) {
        const api = this.__getTransactionApi("/generate/acceptVote");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageAcceptVote(argv) {
        const api = this.__getTransactionApi("/generate/acceptVote");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastAcceptVote(argv) {
        const api = this.__getTransactionApi("/generate/acceptVote");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createRejectVote(argv) {
        const api = this.__getTransactionApi("/generate/rejectVote");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageRejectVote(argv) {
        const api = this.__getTransactionApi("/generate/rejectVote");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastRejectVote(argv) {
        const api = this.__getTransactionApi("/generate/rejectVote");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createVote(argv) {
        const api = this.__getTransactionApi("/generate/vote");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageVote(argv) {
        const api = this.__getTransactionApi("/generate/vote");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastVote(argv) {
        const api = this.__getTransactionApi("/generate/vote");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueAsset(argv) {
        const api = this.__getTransactionApi("/generate/issueAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueAsset(argv) {
        const api = this.__getTransactionApi("/generate/issueAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueAsset(argv) {
        const api = this.__getTransactionApi("/generate/issueAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createTransferAsset(argv) {
        const api = this.__getTransactionApi("/generate/transferAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageTransferAsset(argv) {
        const api = this.__getTransactionApi("/generate/transferAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastTransferAsset(argv) {
        const api = this.__getTransactionApi("/generate/transferAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDestroyAsset(argv) {
        const api = this.__getTransactionApi("/generate/destroyAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDestroyAsset(argv) {
        const api = this.__getTransactionApi("/generate/destroyAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDestroyAsset(argv) {
        const api = this.__getTransactionApi("/generate/destroyAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createGiftAsset(argv) {
        const api = this.__getTransactionApi("/generate/giftAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageGiftAsset(argv) {
        const api = this.__getTransactionApi("/generate/giftAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastGiftAsset(argv) {
        const api = this.__getTransactionApi("/generate/giftAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createGrabAsset(argv) {
        const api = this.__getTransactionApi("/generate/grabAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageGrabAsset(argv) {
        const api = this.__getTransactionApi("/generate/grabAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastGrabAsset(argv) {
        const api = this.__getTransactionApi("/generate/grabAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createTrustAsset(argv) {
        const api = this.__getTransactionApi("/generate/trustAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageTrustAsset(argv) {
        const api = this.__getTransactionApi("/generate/trustAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastTrustAsset(argv) {
        const api = this.__getTransactionApi("/generate/trustAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createSignForAsset(argv) {
        const api = this.__getTransactionApi("/generate/signForAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageSignForAsset(argv) {
        const api = this.__getTransactionApi("/generate/signForAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastSignForAsset(argv) {
        const api = this.__getTransactionApi("/generate/signForAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createToExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageToExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastToExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createBeExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageBeExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastBeExchangeAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDApp(argv) {
        const api = this.__getTransactionApi("/generate/dapp");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDApp(argv) {
        const api = this.__getTransactionApi("/generate/dapp");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDApp(argv) {
        const api = this.__getTransactionApi("/generate/dapp");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDAppPurchasing(argv) {
        const api = this.__getTransactionApi("/generate/dappPurchasing");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDAppPurchasing(argv) {
        const api = this.__getTransactionApi("/generate/dappPurchasing");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDAppPurchasing(argv) {
        const api = this.__getTransactionApi("/generate/dappPurchasing");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createMark(argv) {
        const api = this.__getTransactionApi("/generate/mark");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageMark(argv) {
        const api = this.__getTransactionApi("/generate/mark");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastMark(argv) {
        const api = this.__getTransactionApi("/generate/mark");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createLocationName(argv) {
        const api = this.__getTransactionApi("/generate/locationName");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageLocationName(argv) {
        const api = this.__getTransactionApi("/generate/locationName");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastLocationName(argv) {
        const api = this.__getTransactionApi("/generate/locationName");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createSetLnsManager(argv) {
        const api = this.__getTransactionApi("/generate/setLnsManager");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageSetLnsManager(argv) {
        const api = this.__getTransactionApi("/generate/setLnsManager");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastSetLnsManager(argv) {
        const api = this.__getTransactionApi("/generate/setLnsManager");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createSetLnsRecordValue(argv) {
        const api = this.__getTransactionApi("/generate/setLnsRecordValue");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageSetLnsRecordValue(argv) {
        const api = this.__getTransactionApi("/generate/setLnsRecordValue");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastSetLnsRecordValue(argv) {
        const api = this.__getTransactionApi("/generate/setLnsRecordValue");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createToExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeSpecAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageToExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeSpecAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastToExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeSpecAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createBeExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeSpecAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageBeExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeSpecAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastBeExchangeSpecialAsset(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeSpecAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueEntityFactory(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactory");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueEntityFactory(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactory");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueEntityFactory(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactory");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueEntityFactoryV1(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactoryV1");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueEntityFactoryV1(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactoryV1");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueEntityFactoryV1(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityFactoryV1");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueEntity(argv) {
        const api = this.__getTransactionApi("/generate/issueEntity");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueEntity(argv) {
        const api = this.__getTransactionApi("/generate/issueEntity");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueEntity(argv) {
        const api = this.__getTransactionApi("/generate/issueEntity");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDestroyEntity(argv) {
        const api = this.__getTransactionApi("/generate/destroyEntity");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDestroyEntity(argv) {
        const api = this.__getTransactionApi("/generate/destroyEntity");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDestroyEntity(argv) {
        const api = this.__getTransactionApi("/generate/destroyEntity");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createToExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAny");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageToExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAny");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastToExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAny");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createBeExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAny");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageBeExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAny");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastBeExchangeAny(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAny");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createTransferAny(argv) {
        const api = this.__getTransactionApi("/generate/transferAny");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageTransferAny(argv) {
        const api = this.__getTransactionApi("/generate/transferAny");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastTransferAny(argv) {
        const api = this.__getTransactionApi("/generate/transferAny");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createGiftAny(argv) {
        const api = this.__getTransactionApi("/generate/giftAny");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageGiftAny(argv) {
        const api = this.__getTransactionApi("/generate/giftAny");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastGiftAny(argv) {
        const api = this.__getTransactionApi("/generate/giftAny");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createGrabAny(argv) {
        const api = this.__getTransactionApi("/generate/grabAny");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageGrabAny(argv) {
        const api = this.__getTransactionApi("/generate/grabAny");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastGrabAny(argv) {
        const api = this.__getTransactionApi("/generate/grabAny");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueEntityMulti(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityMulti");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueEntityMulti(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityMulti");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueEntityMulti(argv) {
        const api = this.__getTransactionApi("/generate/issueEntityMulti");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createToExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMulti");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageToExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMulti");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastToExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMulti");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createBeExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMulti");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageBeExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMulti");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastBeExchangeAnyMulti(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMulti");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createToExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMultiAll");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageToExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMultiAll");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastToExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/toExchangeAnyMultiAll");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createBeExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMultiAll");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageBeExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMultiAll");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastBeExchangeAnyMultiAll(argv) {
        const api = this.__getTransactionApi("/generate/beExchangeAnyMultiAll");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createRegisterChain(argv) {
        const api = this.__getTransactionApi("/generate/registerChain");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageRegisterChain(argv) {
        const api = this.__getTransactionApi("/generate/registerChain");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastRegisterChain(argv) {
        const api = this.__getTransactionApi("/generate/registerChain");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createEmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/emigrateAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageEmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/emigrateAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastEmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/emigrateAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createImmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/immigrateAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageImmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/immigrateAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastImmigrateAsset(argv) {
        const api = this.__getTransactionApi("/generate/immigrateAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIssueCertificate(argv) {
        const api = this.__getTransactionApi("/generate/issueCertificate");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIssueCertificate(argv) {
        const api = this.__getTransactionApi("/generate/issueCertificate");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIssueCertificate(argv) {
        const api = this.__getTransactionApi("/generate/issueCertificate");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createDestroyCertificate(argv) {
        const api = this.__getTransactionApi("/generate/destroyCertificate");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageDestroyCertificate(argv) {
        const api = this.__getTransactionApi("/generate/destroyCertificate");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastDestroyCertificate(argv) {
        const api = this.__getTransactionApi("/generate/destroyCertificate");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createMacro(argv) {
        const api = this.__getTransactionApi("/generate/macro");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageMacro(argv) {
        const api = this.__getTransactionApi("/generate/macro");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastMacro(argv) {
        const api = this.__getTransactionApi("/generate/macro");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createMacroCall(argv) {
        const api = this.__getTransactionApi("/generate/macroCall");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageMacroCall(argv) {
        const api = this.__getTransactionApi("/generate/macroCall");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastMacroCall(argv) {
        const api = this.__getTransactionApi("/generate/macroCall");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createPromise(argv) {
        const api = this.__getTransactionApi("/generate/promise");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packagePromise(argv) {
        const api = this.__getTransactionApi("/generate/promise");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastPromise(argv) {
        const api = this.__getTransactionApi("/generate/promise");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createPromiseResolve(argv) {
        const api = this.__getTransactionApi("/generate/promiseResolve");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packagePromiseResolve(argv) {
        const api = this.__getTransactionApi("/generate/promiseResolve");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastPromiseResolve(argv) {
        const api = this.__getTransactionApi("/generate/promiseResolve");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createMultiple(argv) {
        const api = this.__getTransactionApi("/generate/multiple");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageMultiple(argv) {
        const api = this.__getTransactionApi("/generate/multiple");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastMultiple(argv) {
        const api = this.__getTransactionApi("/generate/multiple");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createIncreaseAsset(argv) {
        const api = this.__getTransactionApi("/generate/increaseAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageIncreaseAsset(argv) {
        const api = this.__getTransactionApi("/generate/increaseAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastIncreaseAsset(argv) {
        const api = this.__getTransactionApi("/generate/increaseAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createStakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/stakeAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageStakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/stakeAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastStakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/stakeAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    async createUnstakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/unstakeAsset");
        const result = await api.createTransaction(argv);
        return result;
    }
    async packageUnstakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/unstakeAsset");
        const result = await api.packageTransaction(argv);
        return result;
    }
    async broadcastUnstakeAsset(argv) {
        const api = this.__getTransactionApi("/generate/unstakeAsset");
        const result = await api.broadcastTransaction(argv);
        return result;
    }
    __getMigrateCertificateApi(apiPath) {
        return this.__MIGRATE_CERTIFICATE_API_MAP.get(apiPath);
    }
    async createMigrateCertificate(argv) {
        const api = this.__getMigrateCertificateApi("/generate/migrateCertificate");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async fromAuthSignatureMigrateCertificate(argv) {
        const api = this.__getMigrateCertificateApi("/generate/migrateCertificateFromAuthSignature");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async toAuthSignatureMigrateCertificate(argv) {
        const api = this.__getMigrateCertificateApi("/generate/migrateCertificateToAuthSignature");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    __getCommonApi(apiPath) {
        return this.__COMMON_API_MAP.get(apiPath);
    }
    async verifyAddress(argv) {
        const api = this.__getCommonApi("/common/verifyAddress");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async verifyPublicKey(argv) {
        const api = this.__getCommonApi("/common/verifyPublicKey");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createAccount(argv) {
        const api = this.__getCommonApi("/common/generateAccount");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createAddressBySecret(argv) {
        const api = this.__getCommonApi("/common/generateAddressBySecret");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createAddressByPublicKey(argv) {
        const api = this.__getCommonApi("/common/generateAddressByPublicKey");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createKeypair(argv) {
        const api = this.__getCommonApi("/common/generateKeypair");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async asymmetricEncrypt(argv) {
        const api = this.__getCommonApi("/common/asymmetricEncrypt");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async asymmetricDecrypt(argv) {
        const api = this.__getCommonApi("/common/asymmetricDecrypt");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async calcTransactionMinFee(argv) {
        const api = this.__getCommonApi("/common/calcTransactionMinFee");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async createCiphertextSignature(argv) {
        const api = this.__getCommonApi("/common/generateCiphertextSignature");
        const result = await api.sendPostRequest(argv);
        return result;
    }
}
exports.TransactionApi = TransactionApi;
