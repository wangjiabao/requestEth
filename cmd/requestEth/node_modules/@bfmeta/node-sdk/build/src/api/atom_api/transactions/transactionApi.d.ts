export declare class TransactionApi {
    private __networkHelper;
    private __TRANSACTION_API_MAP;
    private __MIGRATE_CERTIFICATE_API_MAP;
    private __COMMON_API_MAP;
    constructor(__networkHelper: BFMetaNodeSDK.NetworkHelper);
    private __init;
    private __getTransactionApi;
    broadcastCompleteTransaction<T>(argv: {
        [key: string]: any;
    }): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.TransactionApiSuccessReturn<T>>;
    createUsername(argv: BFMetaNodeSDK.Transaction.UsernameTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageUsername(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastUsername<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createSignature(argv: BFMetaNodeSDK.Transaction.SignatureTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageSignature(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastSignature<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDelegate(argv: BFMetaNodeSDK.Transaction.DelegateTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDelegate(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDelegate<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createAcceptVote(argv: BFMetaNodeSDK.Transaction.AcceptVoteTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageAcceptVote(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastAcceptVote<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createRejectVote(argv: BFMetaNodeSDK.Transaction.RejectVoteTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageRejectVote(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastRejectVote<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createVote(argv: BFMetaNodeSDK.Transaction.VoteTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageVote(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastVote<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueAsset(argv: BFMetaNodeSDK.Transaction.IssueAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createTransferAsset(argv: BFMetaNodeSDK.Transaction.TransferAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageTransferAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastTransferAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDestroyAsset(argv: BFMetaNodeSDK.Transaction.DestroyAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDestroyAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDestroyAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createGiftAsset(argv: BFMetaNodeSDK.Transaction.GiftAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageGiftAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastGiftAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createGrabAsset(argv: BFMetaNodeSDK.Transaction.GrabAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageGrabAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastGrabAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createTrustAsset(argv: BFMetaNodeSDK.Transaction.TrustAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageTrustAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastTrustAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createSignForAsset(argv: BFMetaNodeSDK.Transaction.SignForAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageSignForAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastSignForAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createToExchangeAsset(argv: BFMetaNodeSDK.Transaction.ToExchangeAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageToExchangeAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastToExchangeAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createBeExchangeAsset(argv: BFMetaNodeSDK.Transaction.BeExchangeAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageBeExchangeAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastBeExchangeAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDApp(argv: BFMetaNodeSDK.Transaction.DAppTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDApp(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDApp<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDAppPurchasing(argv: BFMetaNodeSDK.Transaction.DAppPurchasingTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDAppPurchasing(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDAppPurchasing<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createMark(argv: BFMetaNodeSDK.Transaction.MarkTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageMark(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastMark<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createLocationName(argv: BFMetaNodeSDK.Transaction.LocationNameTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageLocationName(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastLocationName<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createSetLnsManager(argv: BFMetaNodeSDK.Transaction.SetLnsManagerTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageSetLnsManager(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastSetLnsManager<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createSetLnsRecordValue(argv: BFMetaNodeSDK.Transaction.SetLnsRecordValueTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageSetLnsRecordValue(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastSetLnsRecordValue<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createToExchangeSpecialAsset(argv: BFMetaNodeSDK.Transaction.ToExchangeSpecialAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageToExchangeSpecialAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastToExchangeSpecialAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createBeExchangeSpecialAsset(argv: BFMetaNodeSDK.Transaction.BeExchangeSpecialAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageBeExchangeSpecialAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastBeExchangeSpecialAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueEntityFactory(argv: BFMetaNodeSDK.Transaction.IssueEntityFactoryTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueEntityFactory(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueEntityFactory<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueEntityFactoryV1(argv: BFMetaNodeSDK.Transaction.IssueEntityFactoryTransactionV1Params): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueEntityFactoryV1(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueEntityFactoryV1<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueEntity(argv: BFMetaNodeSDK.Transaction.IssueEntityTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueEntity(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueEntity<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDestroyEntity(argv: BFMetaNodeSDK.Transaction.DestroyEntityTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDestroyEntity(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDestroyEntity<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createToExchangeAny(argv: BFMetaNodeSDK.Transaction.ToExchangeAnyTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageToExchangeAny(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastToExchangeAny<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createBeExchangeAny(argv: BFMetaNodeSDK.Transaction.BeExchangeAnyTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageBeExchangeAny(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastBeExchangeAny<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createTransferAny(argv: BFMetaNodeSDK.Transaction.TransferAnyTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageTransferAny(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastTransferAny<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createGiftAny(argv: BFMetaNodeSDK.Transaction.GiftAnyTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageGiftAny(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastGiftAny<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createGrabAny(argv: BFMetaNodeSDK.Transaction.GrabAnyTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageGrabAny(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastGrabAny<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueEntityMulti(argv: BFMetaNodeSDK.Transaction.IssueEntityMultiTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueEntityMulti(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueEntityMulti<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createToExchangeAnyMulti(argv: BFMetaNodeSDK.Transaction.ToExchangeAnyMultiTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageToExchangeAnyMulti(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastToExchangeAnyMulti<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createBeExchangeAnyMulti(argv: BFMetaNodeSDK.Transaction.BeExchangeAnyMultiTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageBeExchangeAnyMulti(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastBeExchangeAnyMulti<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createToExchangeAnyMultiAll(argv: BFMetaNodeSDK.Transaction.ToExchangeAnyMultiAllTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageToExchangeAnyMultiAll(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastToExchangeAnyMultiAll<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createBeExchangeAnyMultiAll(argv: BFMetaNodeSDK.Transaction.BeExchangeAnyMultiAllTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageBeExchangeAnyMultiAll(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastBeExchangeAnyMultiAll<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createRegisterChain(argv: BFMetaNodeSDK.Transaction.RegisterChainTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageRegisterChain(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastRegisterChain<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createEmigrateAsset(argv: BFMetaNodeSDK.Transaction.EmigrateAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageEmigrateAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastEmigrateAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createImmigrateAsset(argv: BFMetaNodeSDK.Transaction.ImmigrateAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageImmigrateAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastImmigrateAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIssueCertificate(argv: BFMetaNodeSDK.Transaction.IssueCertificateTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIssueCertificate(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIssueCertificate<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createDestroyCertificate(argv: BFMetaNodeSDK.Transaction.DestroyCertificateTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageDestroyCertificate(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastDestroyCertificate<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createMacro(argv: BFMetaNodeSDK.Transaction.MacroTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageMacro(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastMacro<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createMacroCall(argv: BFMetaNodeSDK.Transaction.MacroCallTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageMacroCall(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastMacroCall<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createPromise(argv: BFMetaNodeSDK.Transaction.PromiseTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packagePromise(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastPromise<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createPromiseResolve(argv: BFMetaNodeSDK.Transaction.PromiseResolveTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packagePromiseResolve(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastPromiseResolve<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createMultiple(argv: BFMetaNodeSDK.Transaction.MultipleTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageMultiple(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastMultiple<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createIncreaseAsset(argv: BFMetaNodeSDK.Transaction.IncreaseAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageIncreaseAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastIncreaseAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createStakeAsset(argv: BFMetaNodeSDK.Transaction.StakeAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageStakeAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastStakeAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    createUnstakeAsset(argv: BFMetaNodeSDK.Transaction.UnstakeAssetTransactionParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.CreateResult>;
    packageUnstakeAsset(argv: BFMetaNodeSDK.Transaction.PackageTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.PackageResult>;
    broadcastUnstakeAsset<T>(argv: BFMetaNodeSDK.Transaction.BroadcastTransacationParams): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.Transaction.BroadcastResult<T>>;
    private __getMigrateCertificateApi;
    createMigrateCertificate(argv: BFMetaNodeSDK.CrossChain.GenerateMigrateCertificateParams): Promise<BFMetaNodeSDK.ApiReturn<unknown>>;
    fromAuthSignatureMigrateCertificate(argv: BFMetaNodeSDK.CrossChain.AuthSignMigrateCertificateArgs): Promise<BFMetaNodeSDK.ApiFailureReturn | BFMetaNodeSDK.ApiSuccessReturn<unknown>>;
    toAuthSignatureMigrateCertificate(argv: BFMetaNodeSDK.CrossChain.AuthSignMigrateCertificateArgs): Promise<BFMetaNodeSDK.ApiReturn<unknown>>;
    private __getCommonApi;
    verifyAddress(argv: BFMetaNodeSDK.Common.VerifyAddressParams): Promise<BFMetaNodeSDK.ApiReturn<boolean>>;
    verifyPublicKey(argv: BFMetaNodeSDK.Common.VerifyPublicKeyParams): Promise<BFMetaNodeSDK.ApiReturn<boolean>>;
    createAccount(argv: BFMetaNodeSDK.Common.GenerateAccountParams): Promise<BFMetaNodeSDK.ApiReturn<BFMetaNodeSDK.Common.AccountInfo>>;
    createAddressBySecret(argv: BFMetaNodeSDK.Common.GenerateAddressBySecretParams): Promise<BFMetaNodeSDK.ApiReturn<string>>;
    createAddressByPublicKey(argv: BFMetaNodeSDK.Common.GenerateAddressByPublicKeyParams): Promise<BFMetaNodeSDK.ApiReturn<string>>;
    createKeypair(argv: BFMetaNodeSDK.Common.GenerateKeypairParams): Promise<BFMetaNodeSDK.ApiReturn<BFMetaNodeSDK.Common.Keypairs>>;
    asymmetricEncrypt(argv: BFMetaNodeSDK.Common.AsymmetricEncryptParams): Promise<BFMetaNodeSDK.ApiReturn<BFMetaNodeSDK.Common.AsymmetricEncrypt>>;
    asymmetricDecrypt(argv: BFMetaNodeSDK.Common.AsymmetricDecryptParams): Promise<BFMetaNodeSDK.ApiReturn<BFMetaNodeSDK.Common.AsymmetricDecrypt>>;
    calcTransactionMinFee(argv: BFMetaNodeSDK.Common.CalcTransactionMinFeeParams): Promise<BFMetaNodeSDK.ApiReturn<BFMetaNodeSDK.Common.TransactionMinFee>>;
    createCiphertextSignature(argv: BFMetaNodeSDK.Common.GenerateCiphertextSignatureParams): Promise<BFMetaNodeSDK.ApiReturn<string>>;
}
