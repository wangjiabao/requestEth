"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpHelper = void 0;
require("../../constants");
class HttpHelper {
    fetch;
    __configHelper;
    __config;
    REQUEST_PROTOCOL = "http";
    TRANSACTION_SERVER_URL_PREFIX;
    constructor(configHelper, fetch) {
        this.fetch = fetch;
        this.__configHelper = configHelper;
        this.__config = this.__configHelper.apiConfig;
        this.TRANSACTION_SERVER_URL_PREFIX = `http://127.0.0.1:${this.__config.transactionServerPort}`;
    }
    __getUrlPrefix() {
        if (this.__config.multiNodes && this.__config.multiNodes.enable) {
            const nodes = this.__config.multiNodes.nodes;
            const node = nodes[Math.floor(Math.random() * nodes.length)];
            return `http://${node.ip}:${node.port}/`;
        }
        else {
            const node = this.__config.node;
            if (node) {
                return `http://${node.ip}:${node.port}/`;
            }
            else {
                throw new Error(`node is not init`);
            }
        }
    }
    get URL_PREFIX() {
        return this.__getUrlPrefix();
    }
    createTransaction(url, argv) {
        return this.fetch.post(url, argv);
    }
    sendGetRequest(url, argv) {
        const completeUrl = url + (argv ? `?${JSON.stringify(argv)}` : "");
        return this.fetch.get(completeUrl);
    }
    sendPostRequest = this.createTransaction;
}
exports.HttpHelper = HttpHelper;
