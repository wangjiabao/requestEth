"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpgradeApi = void 0;
const apis_1 = require("./apis");
require("../../../constants");
class UpgradeApi {
    __networkHelper;
    __UPGRADE_API_MAP = new Map();
    constructor(__networkHelper) {
        this.__networkHelper = __networkHelper;
        this.__init();
    }
    __init() {
        const { __networkHelper: networkHelper, __UPGRADE_API_MAP: UPGRADE_API_MAP } = this;
        const upgradeVersionApi = new apis_1.UpgradeVersionApi(networkHelper);
        const upgradeSelfApi = new apis_1.UpgradeSelfApi(networkHelper);
        const nodeCloseApi = new apis_1.NodeCloseApi(networkHelper);
        const nodeRecoverApi = new apis_1.NodeRecoverApi(networkHelper);
        const nodeRestartApi = new apis_1.NodeRestartApi(networkHelper);
        const downloadPackageApi = new apis_1.DownloadPackageApi(networkHelper);
        const nodeUpgradeApi = new apis_1.NodeUpgradeApi(networkHelper);
        const taskInfoApi = new apis_1.TaskInfoApi(networkHelper);
        const upgradeInfoApi = new apis_1.UpgradeInfoApi(networkHelper);
        const upgradeProcessApi = new apis_1.UpgradeProcessApi(networkHelper);
        const upgradeStatusApi = new apis_1.UpgradeStatusApi(networkHelper);
        UPGRADE_API_MAP.set(upgradeVersionApi.REQUEST_API_PATH, upgradeVersionApi);
        UPGRADE_API_MAP.set(upgradeSelfApi.REQUEST_API_PATH, upgradeSelfApi);
        UPGRADE_API_MAP.set(nodeCloseApi.REQUEST_API_PATH, nodeCloseApi);
        UPGRADE_API_MAP.set(nodeRecoverApi.REQUEST_API_PATH, nodeRecoverApi);
        UPGRADE_API_MAP.set(nodeRestartApi.REQUEST_API_PATH, nodeRestartApi);
        UPGRADE_API_MAP.set(downloadPackageApi.REQUEST_API_PATH, downloadPackageApi);
        UPGRADE_API_MAP.set(nodeUpgradeApi.REQUEST_API_PATH, nodeUpgradeApi);
        UPGRADE_API_MAP.set(taskInfoApi.REQUEST_API_PATH, taskInfoApi);
        UPGRADE_API_MAP.set(upgradeInfoApi.REQUEST_API_PATH, upgradeInfoApi);
        UPGRADE_API_MAP.set(upgradeProcessApi.REQUEST_API_PATH, upgradeProcessApi);
        UPGRADE_API_MAP.set(upgradeStatusApi.REQUEST_API_PATH, upgradeStatusApi);
        Object.freeze(UPGRADE_API_MAP);
    }
    __getUpgradeApi(apiPath) {
        return this.__UPGRADE_API_MAP.get(apiPath);
    }
    async upgradeVersion(argv) {
        const api = this.__getUpgradeApi("post/upgradeVersion");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async upgradeSelf(argv) {
        const api = this.__getUpgradeApi("post/upgradeSelf");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async nodeClose(argv) {
        const api = this.__getUpgradeApi("post/close");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async nodeRecover(argv) {
        const api = this.__getUpgradeApi("post/recover");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async nodeRestart(argv) {
        const api = this.__getUpgradeApi("post/restart");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async nodeUpgrade(argv) {
        const api = this.__getUpgradeApi("post/upgrade");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async downloadPackage(argv) {
        const api = this.__getUpgradeApi("get/download");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async upgradeProcess(argv) {
        const api = this.__getUpgradeApi("get/upgrade/process");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async taskInfo(argv) {
        const api = this.__getUpgradeApi("get/task/info");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async upgradeInfo(argv) {
        const api = this.__getUpgradeApi("post/upgrade/info");
        const result = await api.sendPostRequest(argv);
        return result;
    }
    async upgradeStatus(argv) {
        const api = this.__getUpgradeApi("get/upgrade/status");
        const result = await api.sendPostRequest(argv);
        return result;
    }
}
exports.UpgradeApi = UpgradeApi;
