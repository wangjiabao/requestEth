"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BCFApi = exports.BCF_PEERS = void 0;
const util_node_1 = require("@bnqkl/util-node");
const wallet_helpers_1 = require("@bfmeta/wallet-helpers");
const node_sdk_1 = require("@bfmeta/node-sdk");
exports.BCF_PEERS = {
    host: Symbol("host"),
    browser: Symbol("browser"),
};
let BCFApi = class BCFApi extends wallet_helpers_1._BaseApi {
    host;
    httpHelper;
    browser;
    __sdk;
    constructor(host, httpHelper, browser) {
        super(httpHelper);
        this.host = host;
        this.httpHelper = httpHelper;
        this.browser = browser;
        this.__sdk = new node_sdk_1.BFMetaSDK({
            multiNodes: {
                enable: true,
                nodes: this.host.map((v) => {
                    return { ip: v.ip, port: v.port };
                }),
            },
        });
    }
    get sdk() {
        return this.__sdk;
    }
    getBrowserUrl() {
        if (this.browser) {
            return this.browser;
        }
        else {
            throw new Error(`invaild browser path`);
        }
    }
};
BCFApi = __decorate([
    (0, util_node_1.Injectable)(),
    __param(0, (0, util_node_1.Inject)(exports.BCF_PEERS.host)),
    __param(2, (0, util_node_1.Inject)(exports.BCF_PEERS.browser, { optional: true })),
    __metadata("design:paramtypes", [Array, wallet_helpers_1.HttpHelper, String])
], BCFApi);
exports.BCFApi = BCFApi;
