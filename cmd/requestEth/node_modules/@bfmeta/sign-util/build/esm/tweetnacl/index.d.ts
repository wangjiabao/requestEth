export * from "./sign";
export * from "./box";
export * from "./core";
export * from "./hash";
export * from "./curve25519";
import type { ByteArray } from "./array";
export declare class KeypairHelper implements BFMetaSignUtil.KeypairHelperInterface {
    private __buffer;
    constructor(buffer: BFMetaSignUtil.Buffer.BufferConstructor);
    create(secretHash: Uint8Array): {
        secretKey: BFMetaSignUtil.Buffer.Buffer;
        publicKey: BFMetaSignUtil.Buffer.Buffer;
    };
    createBySecretKey(secretKey: ByteArray): {
        secretKey: BFMetaSignUtil.Buffer.Buffer;
        publicKey: BFMetaSignUtil.Buffer.Buffer;
    };
    detached_sign(hash: Uint8Array, secretKey: Uint8Array): BFMetaSignUtil.Buffer.Buffer;
    detached_verify(hash: Uint8Array, signatureBuffer: Uint8Array, publicKey: Uint8Array): boolean;
    box(msg: Uint8Array, publicKey: Uint8Array, secretKey: Uint8Array, nonce?: Uint8Array): {
        encryptedMessage: Uint8Array;
        nonce: Uint8Array;
    };
    open(msg: Uint8Array, nonce: Uint8Array, publicKey: Uint8Array, secretKey: Uint8Array): false | Uint8Array;
}
//# sourceMappingURL=index.d.ts.map