"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CryptoHelper = void 0;
const crypto = __importStar(require("node:crypto"));
require("@bfmeta/wallet-typings");
// import type {} from "@bfmeta/node-sdk";
class CryptoHelper {
    async sha256(msg) {
        if (msg instanceof Uint8Array) {
            return crypto.createHash("sha256").update(msg).digest();
        }
        return crypto
            .createHash("sha256")
            .update(new Uint8Array(Buffer.from(msg)))
            .digest();
    }
    md5(data) {
        const hash = crypto.createHash("md5");
        if (data) {
            return hash.update(data).digest();
        }
        return hash;
    }
    ripemd160(data) {
        const hash = crypto.createHash("ripemd160");
        if (data) {
            return hash.update(data).digest();
        }
        return hash;
    }
}
exports.CryptoHelper = CryptoHelper;
