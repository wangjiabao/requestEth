import { HttpHelper } from "./httpHelper";
export declare const BFCHAIN_PEERS: {
    ips: symbol;
    port: symbol;
    browser: symbol;
};
export declare abstract class _BaseApi {
    httpHelper: HttpHelper;
    browser: string;
    constructor(httpHelper: HttpHelper);
    getTransactionsByBrowser(params: BFMetaNodeSDK.Basic.GetTransactionsParams): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetTransactionsByBrowserResp>>;
    getAddressBalance(address: string, magic: string, assetType: string): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAddressBalanceResp>>;
    getAccountInfo(address: string): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAccountInfoResp | null>>;
    getBlockAverageFee(): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetBlockAverageFeeResp>>;
    getAccountAsset(address: string): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAccountAssetResp>>;
    getAssets(page: number, pageSize: number, assetType?: string): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAssetsResp>>;
    getAssetDetails(assetType: string): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAssetDetailsResp>>;
    getAllAccountAsset(opt: BFChainWallet.BCF.GetAllAccountAssetReq): Promise<BFChainWallet.BCF.COMMON_RESPONSE<BFChainWallet.BCF.GetAllAccountAssetResp>>;
    abstract getBrowserUrl(): string | undefined;
}
