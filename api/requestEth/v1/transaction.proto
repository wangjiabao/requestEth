syntax = "proto3";

package api.requestEth.v1;

import "google/api/annotations.proto";

option go_package = "requestEth/api/requestEth/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

service Transaction {
  rpc SendTransaction (SendTransactionRequest) returns (SendTransactionReply) {
    option (google.api.http) = {
      post: "/api/transaction"
      body: "send_body"
    };
  }

  rpc SendTransactionEth (SendTransactionEthRequest) returns (SendTransactionEthReply) {
    option (google.api.http) = {
      post: "/api/transaction_eth"
      body: "send_body"
    };
  }

  rpc Transaction (TransactionRequest) returns (TransactionReply) {
    option (google.api.http) = {
      get: "/api/transaction/{tx}"
    };
  }

  rpc EthBalance (EthBalanceRequest) returns (EthBalanceReply) {
    option (google.api.http) = {
      get: "/api/eth_balance"
    };
  }

  rpc GenerateKey (GenerateKeyRequest) returns (GenerateKeyReply) {
    option (google.api.http) = {
      get: "/api/generate_key"
    };
  }

  rpc TokenBalance (TokenBalanceRequest) returns (TokenBalanceReply) {
    option (google.api.http) = {
      get: "/api/usdt_balance"
    };
  }

  rpc VerifySig (VerifySigRequest) returns (VerifySigReply) {
    option (google.api.http) = {
      get: "/api/verify_sig"
    };
  }

  rpc GetReserves (GetReservesRequest) returns (GetReservesReply) {
    option (google.api.http) = {
      get: "/api/get_reserves"
    };
  }

  rpc GetAll (GetAllRequest) returns (GetAllReply) {
    option (google.api.http) = {
      get: "/api/get_all"
    };
  }

  rpc GetArray (GetArrayRequest) returns (GetArrayReply) {
    option (google.api.http) = {
      get: "/api/get_array"
    };
  }

  rpc GetLpByOrderId (GetLpByOrderIdRequest) returns (GetLpByOrderIdReply) {
    option (google.api.http) = {
      get: "/api/get_lp"
    };
  }

  rpc GetBuyByOrderId (GetBuyByOrderIdRequest) returns (GetBuyByOrderIdReply) {
    option (google.api.http) = {
      get: "/api/get_buy"
    };
  }

  rpc GetUserLp (GetUserLpRequest) returns (GetUserLpReply) {
    option (google.api.http) = {
      get: "/api/get_user_lp"
    };
  }

  rpc AddLiquidity (AddLiquidityRequest) returns (AddLiquidityReply) {
    option (google.api.http) = {
      post: "/api/add_liquidity"
      body: "send_body"
    };
  }

  rpc RemoveLiquidity (RemoveLiquidityRequest) returns (RemoveLiquidityReply) {
    option (google.api.http) = {
      post: "/api/remove_liquidity"
      body: "send_body"
    };
  }

  rpc BuyAICAT (BuyAICATRequest) returns (BuyAICATReply) {
    option (google.api.http) = {
      post: "/api/buy"
      body: "send_body"
    };
  }
}

message GetReservesRequest {
  string pair = 1;
}

message GetReservesReply {
  string reservesOne = 1;
  string reservesTwo = 2;
}

message GetAllRequest {
}

message GetAllReply {
  string buyArrayLength = 1;
  string reqLpArrayLength = 2;
  string withdrawArrayLength = 3;
}

message GetArrayRequest {
  string reqType = 1;
  string start = 2;
  string end = 3;
}

message GetArrayReply {
  repeated List list = 1;
  message List {
    string orderId = 1;
  }
}

message GetBuyByOrderIdRequest {
  string orderId = 1;
}

message GetBuyByOrderIdReply {
  string usdtArray = 2; // 使用u
  string catArray = 3; // 获得b
}

message GetLpByOrderIdRequest {
  string orderId = 1;
}

message GetLpByOrderIdReply {
  string lpArray = 1; // 添加时lp获得，移除时lp使用
  string lpUsdtArray = 2; // 添加时使用u，移除时释放u,
  string lpCatArray = 3; // 添加时使用b，移除时释放b,
}

message GetUserLpRequest {
  string address = 1;
}

message GetUserLpReply {
  string lpAmount = 1; // 用户此刻lp
  string lpAmountTotal = 2; // 全局lp
}

message AddLiquidityRequest {
  message SendBody{
    string orderId = 1;
    string user = 2;
    string amountUsdt = 3;
    string amountAicat = 4;
  }

  SendBody send_body = 1;
}

message AddLiquidityReply {
  string res = 1;
}

message RemoveLiquidityRequest {
  message SendBody{
    string orderId = 1;
    string user = 2;
    string liquidityAmount = 3;
  }

  SendBody send_body = 1;
}

message RemoveLiquidityReply {
  string res = 1;
}

message BuyAICATRequest {
  message SendBody{
    string orderId = 1;
    string usdtAmount = 2;
  }

  SendBody send_body = 1;
}

message BuyAICATReply {
  string res = 1;
}

message VerifySigRequest {
  string sign = 2;
  string content = 1;
}

message VerifySigReply {
  bool res = 1;
  string address = 2;
}

message TokenBalanceRequest {
  string token = 2;
  string address = 1;
}

message TokenBalanceReply {
  string balance = 1;
  string err = 2;
}

message SendTransactionRequest {
  message SendBody{
    string privateKey = 1;
    string toAddr = 2;
    string token = 4;
    string amount = 3;
  }

  SendBody send_body = 1;
}

message SendTransactionReply {
  string tx = 1;
  string err = 2;
}

message SendTransactionEthRequest {
  message SendBody{
    string privateKey = 1;
    string toAddr = 2;
    string amount = 3;
  }

  SendBody send_body = 1;
}

message SendTransactionEthReply {
  string tx = 1;
  string err = 2;
}

message EthBalanceRequest {
  string address = 1;
}

message EthBalanceReply {
  string balance = 1;
  string err = 2;
}


message TransactionRequest {
  string tx = 1;
}

message TransactionReply {
  uint64 status = 1;
}

message GenerateKeyRequest {
}

message GenerateKeyReply {
  string address = 1;
  string privateKey = 2;
  string err = 3;
}